name: Deploy Counter Service to EKS and the Environment

on:
  workflow_dispatch:
    inputs:
      image_url:
        description: 'Docker image URL'
        required: true
      destroy:
        description: 'Destroy the infrastructure'
        required: false
        default: 'false'
  repository_dispatch:
    types: [deploy]

jobs:
  validate:
    name: Validate Terraform and YAML Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: 1.5.7  # Ensure you are using the latest stable version

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Validate Terraform Format
        run: terraform fmt -check -recursive
        working-directory: ./terraform

      - name: Validate Terraform
        run: terraform validate
        working-directory: ./terraform


  deploy:
    name: Deploy to EKS
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: 1.5.7

      # - name: Terraform Init
      #   run: |
      #     echo "Initializing Terraform"
      #     terraform init
      #   working-directory: ./terraform 

      # - name: Terraform Apply
      #   run: |
      #     echo "Applying Terraform configuration"
      #     terraform apply -auto-approve
      #   working-directory: ./terraform 

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
  

      - name: Configure kubectl to use EKS cluster
        run: |
          echo "Configuring kubectl to use EKS cluster"
          aws eks update-kubeconfig --name ${{ vars.CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}
          kubectl get pods -n counter-dev

      - name: Print Docker Image URL for Test
        run: |
          echo "Docker Image URL for deployment: ${{ github.event.inputs.image_url }}"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.5.4'

      - name: Deploy with Helm
        run: |
          echo "Deploying with Helm"
          helm upgrade --install counter-service ./deployment \
            --set deployment.container.image=${{ github.event.inputs.image_url }} \
            --namespace counter-dev
  destroy:
    name: Destroy Terraform Infrastructure
    runs-on: ubuntu-latest
    if: github.event.inputs.destroy == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set AWS credentials
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./terraform